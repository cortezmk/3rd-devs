SYSTEM:
    <objective>
    Retrieve the answer to user's question from the database.
    </objective>
    <rules>
    - answer in JSON format as following:
    {
        "thinking": give here your reasoning for the actions, i.e. action plan and what is yet to retrieve,
        "query": query to the database. It's going to be ran on DB engine. Valid queries are described in <query> section
        "answer": provide this entry only if you know the answer to user's question. It has to be in JSON array format directly in that field.
    }
    - user will respond with result from database by given query
    - provide only one JSON object block. You will retrieve all the necessary responses for the queries in conversation
    - provide the query only for the next step of resolving the task
    - respond only with JSON. You can provide comments in "thinking" field.
    - do not provide answer in markdown format. Plain JSON is enough.
    </rules>
    <query>
    Query is in SQL syntax. Available commands:
    - show tables - returns list of tables
    - show create table TABLE_NAME - returns table structure
    - any select type query
    </query>
    Good luck!
USER: które aktywne datacenter (DC_ID) są zarządzane przez pracowników, którzy są na urlopie (is_active=0)? Odpowiedź powinna być array z wartościami np. [1, 2, 3]
AI: {
    "thinking": "Aby znaleźć aktywne datacentra (DC_ID), które są zarządzane przez pracowników na urlopie, będę potrzebował najpierw sprawdzić struktury tabeli, aby zrozumieć, gdzie znajdują się informacje o datacentrach oraz pracownikach. Najpierw wykonam zapytanie o tabele, aby zidentyfikować, które z nich mogą zawierać potrzebne dane.",
    "query": "show tables",
    "answer": []
}
DB: {"reply":[{"Tables_in_banan":"connections"},{"Tables_in_banan":"correct_order"},{"Tables_in_banan":"datacenters"},{"Tables_in_banan":"users"}],"error":"OK"}
AI: {
    "thinking": "Zidentyfikowałem dostępne tabele: 'connections', 'correct_order', 'datacenters' oraz 'users'. Interesuje mnie tabela 'datacenters' dla informacji o datacentrach oraz tabela 'users' dla informacji o pracownikach. Muszę sprawdzić szczegóły obu tabel, aby ustalić, jak są one ze sobą powiązane i czy zawierają kolumny dotyczące DC_ID oraz is_active.",
    "query": "show create table datacenters",
    "answer": []
}
DB: {"reply":[{"Table":"datacenters","Create Table":"CREATE TABLE `datacenters` (\n  `dc_id` int(11) DEFAULT NULL,\n  `location` varchar(30) NOT NULL,\n  `manager` int(11) NOT NULL DEFAULT 31,\n  `is_active` int(11) DEFAULT 0\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci"}],"error":"OK"}
AI: {
    "thinking": "Tabela 'datacenters' zawiera kolumny 'dc_id', 'manager' oraz 'is_active'. Wartość 'is_active' zapewne wskazuje, czy datacenter jest aktywne. Muszę teraz sprawdzić tabelę 'users', aby zidentyfikować, które z nich mają status 'is_active' równy 0 oraz w jaki sposób są powiązani z menedżerami datacenters.",   
    "query": "show create table users",
    "answer": []
}
DB: {"reply":[{"Table":"users","Create Table":"CREATE TABLE `users` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `username` varchar(20) DEFAULT NULL,\n  `access_level` varchar(20) DEFAULT 'user',\n  `is_active` int(11) DEFAULT 1,\n  `lastlog` date DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=98 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci"}],"error":"OK"}
AI: {
    "thinking": "Tabela 'users' zawiera kolumny 'id' oraz 'is_active', gdzie 'is_active' wskazuje aktywność użytkowników. Pracownicy na urlopie będą mieli wartość 'is_active' równą 0. Teraz mogę wykonać zapytanie, które połączy tabelę 'datacenters' z tabelą 'users', aby znaleźć aktywne datacentra (gdzie 'is_active' = 1 w tabeli 'datacenters') i sprawdzić, którzy z menedżerów (kolumna 'manager') są na urlopie (gdzie 'is_active' = 0 w tabeli 'users').",
    "query": "SELECT dc_id FROM datacenters WHERE is_active = 1 AND manager IN (SELECT id FROM users WHERE is_active = 0)",
    "answer": []
}
DB: {"reply":[{"dc_id":"4278"},{"dc_id":"9294"}],"error":"OK"}
AI: {
    "thinking": "Otrzymałem odpoiwedź zawierającą aktywne datacentra, które są zarządzane przez pracowników na urlopie. Teraz mogę zwrócić wyniki w wymaganym formacie JSON-array.",
    "query": "",
    "answer": [4278, 9294]
}
DB: 4278,9294
Reporting: {"task":"database","answer":[4278,9294]}